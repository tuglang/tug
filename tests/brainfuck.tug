string = import("string")

func fillJumpTable(program) {
    result = {}
    stack = {}
    stackPointer = 0
    i = 0
    loop len(program) {
        instruction = program[i]
        if instruction == "[" {
            stackPointer = stackPointer + 1
            stack[stackPointer] = i
        } else if instruction == "]" {
            destination = stack[stackPointer]
            stack[stackPointer] = none
            stackPointer = stackPointer - 1
            result[i] = destination
            result[destination] = i
        }
        i++
    }

    ret result
}

program = ">++++++++[<+++++++++>-]<.>++++[<+++++++>-]<+.+++++++..+++.>>++++++[<+++++++>-]<+
+.------------.>++++++[<+++++++++>-]<+.<.+++.------.--------.>>>++++[<++++++++>-
]<+."
jumpTable = fillJumpTable(program)

instructionCusror = 0
tape = {}
pointer = 0
tape[0] = 0

loop if instructionCusror < len(program) {
    instruction = program[instructionCusror]
    if instruction == "+" {
        tape[pointer] = tape[pointer] + 1
    } else if instruction == "-" {
        tape[pointer] = tape[pointer] - 1
    } else if instruction == ">" {
        pointer = pointer + 1
        tape[pointer] = tape[pointer] || 0
    } else if instruction == "<" {
        pointer = pointer - 1
    } else if instruction == "[" && tape[pointer] == 0 {
        instructionCusror = jumpTable[instructionCusror]
    } else if instruction == "]" {
        instructionCusror = jumpTable[instructionCusror] - 1
    } else if instruction == "." {
        print(string.char(tape[pointer]), "")
    } else if instruction == "," {
        # Do something here
    }

    instructionCusror = instructionCusror + 1
}